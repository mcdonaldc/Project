/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package backend;

import java.sql.Time;
import java.util.Date;

/**
 *
 * @author Sam
 */
public class NewAssignmentMenu extends javax.swing.JFrame {
    
    /**
     * Creates new form NewJFrame
     */
    public NewAssignmentMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        Months = new javax.swing.JComboBox();
        Day = new javax.swing.JComboBox();
        Year = new javax.swing.JComboBox();
        Hour = new javax.swing.JComboBox();
        Hour1 = new javax.swing.JComboBox();
        Submission = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescField = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        NameField = new javax.swing.JTextPane();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Months.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        Months.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MonthsMouseClicked(evt);
            }
        });

        Day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        Day.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DayMouseClicked(evt);
            }
        });

        Year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Year", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        Year.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YearMouseClicked(evt);
            }
        });

        Hour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hours", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        Hour1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minutes", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        Submission.setText("Submit");
        Submission.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Submission.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SubmissionMouseClicked(evt);
            }
        });

        jLabel1.setText("Create New Assignment");

        jLabel2.setText("Enter Name:");

        jLabel3.setText("Enter Description:");

        jLabel4.setText("Enter Due Date and Time:");

        jLabel5.setText("Hours larger than twelve are in PM.");

        jScrollPane2.setViewportView(DescField);

        jScrollPane3.setViewportView(NameField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Months, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Submission)
                                .addGap(22, 22, 22))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(Hour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Months, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Submission)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>                        

    private void MonthsMouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        
    }                                   

    private void DayMouseClicked(java.awt.event.MouseEvent evt) {                                 
        // TODO add your handling code here:
    }                                

    private void YearMouseClicked(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void SubmissionMouseClicked(java.awt.event.MouseEvent evt) {                                        
        String monthname = Months.getSelectedItem().toString();
        String dayname = Day.getSelectedItem().toString();
        String yearname = Year.getSelectedItem().toString();
        String hourname = Hour.getSelectedItem().toString();
        String minutesname = Hour1.getSelectedItem().toString();
        
        if (" ".equals(NameField.getText()) || " ".equals(DescField.getText()) || 
                "Months".equals(monthname) || "Day".equals(dayname) || 
                "Year".equals(yearname) || "Hour".equals(hourname) || 
                "Hour1".equals(minutesname)) {
            
            // not sure if " " is the right thing to be comparing to - needs to be tested
            // checks if the user has entered text in the name field
            // if text hasn't been entered - user is notified that a name must be entered
            if (" ".equals(NameField.getText())) {
                System.out.println("User must enter name.");
            } 
            
            // not sure if " " is the right thing to be comparing to - needs to be tested
            // checks if the user has entered text in the description field
            // if text hasn't been entered - user is notified that a description must be entered
            if (" ".equals(DescField.getText())) {
                System.out.println("User must enter description.");
            }
            
            // checks if the user has selected a month
            // if a month has not been selected- user is notified that one must be chosen 
            if ("Months".equals(monthname)){
                System.out.println("User must select a month.");
            }
            
            // checks if the user has selected a day
            // if a day has not been selected- user is notified that one must be chosen
            if ("Day".equals(dayname)){
                System.out.println("User must select a day.");
            }
            
            // checks if the user has selected a year
            // if a year has not been selected- user is notified that one must be chosen
            if ("Year".equals(yearname)){
                System.out.println("User must select a year.");
            }
            
            // checks if the user has selected an hour
            // if an hour has not been selected- user is notified that one must be chosen
            if ("Hour".equals(hourname)){
                System.out.println("User must select an hour.");
            }
            
            // checks if the user has selected a minute value
            // if a minute value has not been selected- user is notified that one must be chosen
            if ("Hour1".equals(monthname)){
                System.out.println("User must select a minute value.");
            }   
        }
        
        // to reach this point, all categories must be filled out
        else {
            
            // creates a new Assignment object
            Assignment a = new Assignment();
            
            // the assignment is given a name 
            String name = NameField.getText();
            a.setName(name);
       
            // the assignment is given a description
            String desc = DescField.getText();
            a.setDescription(desc);

            // sets the selected values of the drop-down menus into int values
            int month = Integer.parseInt(monthname);
            int day = Integer.parseInt(dayname);
            int year = Integer.parseInt(yearname);
            int hour = Integer.parseInt(hourname);
            int minutes = Integer.parseInt(minutesname);
            
            // creates a new Date object with the selected year, month, and day
            Date d = new Date(year, month, day);
            // the assignment is given a date
            a.setDate(d);
            
            // creates a new Time object with the selected hour and minutes
            // all times are set to 0 seconds
            Time t = new Time(hour, minutes, 0);
            // the assignment is given a time
            a.setTime(t);
        
        // database is a Database object
        // a Database object will be passed as a parameter
        // need to ensure that this will work properly
        Database database = new Database();
        database.addAssignment(a);
        database.saveDB();   
        }
    }                                       

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewAssignmentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewAssignmentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewAssignmentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewAssignmentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewAssignmentMenu().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JComboBox Day;
    private javax.swing.JTextPane DescField;
    private javax.swing.JComboBox Hour;
    private javax.swing.JComboBox Hour1;
    private javax.swing.JComboBox Months;
    private javax.swing.JTextPane NameField;
    private javax.swing.JButton Submission;
    private javax.swing.JComboBox Year;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration                   
}
